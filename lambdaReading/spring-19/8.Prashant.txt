Total functional programming, D. A. Turner
@http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.106.364&rep=rep1&type=pdf

Summary:


Notes:
* too lazy/busy to take notes!

Comments:
- Did this catch on? Ie, is there a practical language that is total FP?
  esp with existence of dep type langs.
- totally agree that using the primitive recursion and limiting a lang to
  just primitive recursion although painful at first is great for teaching
  like Pie.


In-meeting comments:
- Eric: 
  * I like that it makes the case for total functional prog outside of 
    the context of dependently typed lang.
  * nicely pointed out that if we have totality then strictness and
    nonstrictness doesn't change the semantic. lazy eval then just 
    becomes an optimization.
  * Pierce gives codata much more space and explanation in software 
    fundation.
  * data and codata interact with each other.

  
- checkout: 
  * brainfuck
  * jsfuck
  * robozzle
